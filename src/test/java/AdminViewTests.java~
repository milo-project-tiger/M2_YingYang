package test;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import model.Student;
import org.junit.Assert;
import org.junit.Test;
import org.junit.Ignore;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
/*
  Unit Test Cases for routes relevant to Admin View... 
  
  routes:   (OrderSystemController)
  
  "/addProduct/"  //add product to known products  
  
  test... 
  i. product is added successfully.
  ii. does not add empty product name     
  iii. 
  
  
  "/placeStock/"  //commit a product to the stock list .. with a quantity
  
  i.

  "getAllProducts/"   // return all known products
  
  i. expected number of products are displayed
  ii. 
  
  "products/{id}"    //delete products from knowledge
  
  i. the product is deleted  
  
  //"getAllStockedProducts"  
  
  
  
*/
public class AdminViewTests {
    
    @Test
    public void productAdded() throws IOException {
	//test... 
 /*i. product is added successfully.
  ii. does not add empty product name
  iii. description is visible..
     
  "/addProduct/"  //add product to known products  //service? */

  //call curl from java to add products...

  //json to object from getAllProducts Matches List<n-1>  
	    
	try{
	    URL url = new URL(TestConfig.URL+"students");
	    HttpURLConnection httpURLConnection = (HttpURLConnection)
		url.openConnection();
	    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
	    String line = "";
	    StringBuilder stringBuilder = new StringBuilder();
	    
	    while((line = bufferedReader.readLine()) !=null){
		stringBuilder.append(line);
	    }
	    
	    Gson gson = new Gson();
	    String json = stringBuilder.toString();
	    List<Student> students = gson.fromJson(json, new TypeToken<List<Student>>(){}.getType());
	    //String s = stringBuilder.toString();
	    Assert.assertEquals(students.get(0).getName(), "Milo");
	    
	} catch (MalformedURLException e) {
	    e.printStackTrace();
	} catch (IOException e) {
	    e.printStackTrace();
	}
    }
    
}
